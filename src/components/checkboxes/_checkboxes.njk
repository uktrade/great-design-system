{% from "../../components/input/_input.njk" import greatInput %}
{% from "../error-message/_error-message.njk" import greatErrorMessage %}
{% from "../hint/_hint.njk" import greatHint %}
{% from "../label/_label.njk" import greatLabel %}
{% from "./_checkbox_label.njk" import greatCheckboxLabel %}
{% macro greatCheckboxes(isPageHeading, describedBy, hint, checkboxesId, formGroupClasses, checkboxQuestion, errorMessage, useSmall, checkboxes) %}
    <div class="govuk-form-group {% if formGroupClasses %}{{formGroupClasses}}{% endif %}{% if errorMessage %} govuk-form-group--error {% endif %}">
        <fieldset class="govuk-fieldset" 
            aria-describedby="{% if describedBy %}{{describedBy}} {% endif %}{% if errorMessage %}{{checkboxesId}}-error {%endif%}{% if hint %}{{checkboxesId}}-hint{% endif %}">
            <legend class="govuk-fieldset__legend {% if isPageHeading %} govuk-fieldset__legend--l" {% endif %}>
                <h1 class="govuk-fieldset__heading"> 
                    {{ checkboxQuestion }}
                </h1>
            </legend>
            {% if hint %}
                {{ greatHint(
                    id=hint.id,
                    classes=hint.classes,
                    html=hint.html,
                    text=hint.text,
                    for = checkboxesId
                ) }}
            {% endif %}
            {% if errorMessage %}
                {{ greatErrorMessage(
                    id=errorMessage.id,
                    for=checkboxesId,
                    classes=errorMessage.classes,
                    visuallyHiddenText=errorMessage.visuallyHiddenText,
                    html=errorMessage.html,
                    text=errorMessage.text
                ) }}
            {% endif %}
            <div {% if checkboxesId %} id="{{ checkboxesId }}"{% endif %} 
                class="govuk-checkboxes {% if useSmall %} govuk-checkboxes--small {% endif %}" 
                data-module="govuk-checkboxes"
            >
                {% for checkboxItem in checkboxes %}
                    {% if checkboxItem.exclusive %}
                        <div class="govuk-checkboxes__divider">or</div>
                    {% endif %}
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input" 
                            id="{{checkboxItem.id if checkboxItem.id else checkboxesId +"-"+loop.index }}",
                            name="{{checkboxesId}}" 
                            type="checkbox" 
                            value="{{checkboxItem.value}}" 
                            {% if checkboxItem.exclusive %} data-behaviour="exclusive" {% endif %} 
                            {% if checkboxItem.conditionalInput %} 
                                data-aria-controls="{{ checkboxItem.conditionalInput.containerId }}" 
                            {% endif %}
                        >
                        {{ greatCheckboxLabel(
                            text = checkboxItem.label.text,
                            html = checkboxItem.label.html,
                            classes = checkboxItem.label.classes,
                            defaultFor = checkboxesId +"-"+loop.index,
                            for = checkboxItem.id
                        ) }}
                    </div>
                    {% if checkboxItem.conditionalInput %}
                        <div id="{{checkboxItem.conditionalInput.containerId}}"
                            class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden {% if conditionalItem.conditionalInput.containerClasses %} {{ conditionalItem.conditionalInput.containerClasses }} {% endif %}"   
                        >
                            {{ greatInput(
                                type = checkboxItem.conditionalInput.type,
                                name = checkboxItem.conditionalInput.name,
                                id = checkboxItem.conditionalInput.inputId,
                                errorMessage = {
                                    id: checkboxItem.conditionalInput.errorMessage.id,
                                    text: checkboxItem.conditionalInput.errorMessage.text,
                                    html: checkboxItem.conditionalInput.errorMessage.html,
                                    classes: checkboxItem.conditionalInput.errorMessage.classes,
                                    for: checkboxItem.conditionalInput.inputId
                                },
                                label = {
                                    text: checkboxItem.conditionalInput.label.text,
                                    html:checkboxItem.conditionalInput.label.html,
                                    classes: checkboxItem.conditionalInput.label.html,
                                    for: checkboxItem.conditionalInput.inputId
                                },
                                hint = {
                                    id: checkboxItem.conditionalInput.hint.id,
                                    text: checkboxItem.conditionalInput.hint.text,
                                    html: checkboxItem.conditionalInput.hint.html,
                                    classes: checkboxItem.conditionalInput.hint.classes,
                                    for: checkboxItem.conditionalInput.inputId
                                },
                                classes = checkboxItem.conditionalInput.classes,
                                spellcheck = checkboxItem.conditionalInput.spellcheck,
                                value = checkboxItem.conditionalInput.value,
                                disabled = checkboxItem.conditionalInput.disabled,
                                autocomplete = checkboxItem.conditionalInput.autocomplete,
                                pattern = checkboxItem.conditionalInput.pattern,
                                inputmode = checkboxItem.conditionalInput.inputmode,
                                prefix = checkboxItem.conditionalInput.prefix,
                                suffix = checkboxItem.conditionalInput.suffix,
                                formGroupClasses = checkboxItem.conditionalInput.formGroupClasses,
                                beforeInput = checkboxItem.conditionalInput.beforeInput,
                                afterInput = checkboxItem.conditionalInput.afterInput,
                                attributes = checkboxItem.conditionalInput.attributes,
                                placeholder = checkboxItem.conditionalInput.placeholder
                            ) }}
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
  </fieldset>
</div>
{% endmacro %}