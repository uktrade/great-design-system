// Variables
$great-ds-button-shadow-size: 3px;
$great-ds-button-padding: 13px 20px 12px;
$great-ds-button-inline-padding: 8px 15px 7px;
$great-ds-button-icon-padding: 8px 10px 7px;
$great-ds-button-font-size: 20px;
$great-ds-button-line-height: 1.3;
$great-ds-button-box-sizing: border-box;
$great-ds-button-display: inline-block;
$great-ds-button-position: relative;
$great-ds-button-width: 100%;
$great-ds-button-margin: 0 0 20px;
$great-ds-button-border-width: 2px;
$great-ds-button-border-radius: 0;
$great-ds-button-text-align: center;
$great-ds-button-vertical-align: top;
$great-ds-button-cursor: pointer;
$great-ds-button-appearance: none;
$great-ds-button-outline: 2px solid transparent;

// Placeholder for base button styles
%great-ds-button-base {
    font-family: $great-ds-type-family-great-ds-bold;
    font-size: $great-ds-button-font-size;
    box-sizing: $great-ds-button-box-sizing;
    display: $great-ds-button-display;
    position: $great-ds-button-position;
    width: $great-ds-button-width;
    margin: $great-ds-button-margin;
    border: $great-ds-button-border-width solid rgba(0, 0, 0, 0);
    border-bottom: none;
    border-radius: $great-ds-button-border-radius;
    text-align: $great-ds-button-text-align;
    text-decoration: none;
    vertical-align: $great-ds-button-vertical-align;
    cursor: $great-ds-button-cursor;
    -webkit-appearance: $great-ds-button-appearance;
    padding: $great-ds-button-padding;
    line-height: $great-ds-button-line-height;
    -webkit-font-smoothing: auto;
    outline: $great-ds-button-outline;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    direction: ltr;

    .great-ds-icon-svg {
        vertical-align: middle;
        flex-shrink: 0;
        align-self: center;
    }

    @include govuk-media-query($from: tablet) {
        width: auto;
    }

    &::before {
        content: "";
        display: block;
        position: absolute;
        top: -2px;
        right: -2px;
        bottom: -4px;
        left: -2px;
        background: rgba(0, 0, 0, 0);
    }
}

// Mixin for button states
@mixin great-ds-button-states($bg-color, $bg-hover, $text-color, $border, $border-hover, $has-border: false, $is-inverted: false) {
    background-color: $bg-color;
    color: $text-color;
    box-shadow: 0 $great-ds-button-shadow-size 0 $border;

    @if $has-border {
        border: $great-ds-button-border-width solid $border;
        border-bottom: none;
    }

    @if $is-inverted {
        box-shadow: 0 2px 0 $border;
    }

    $focus-styles: (
        outline: $great-ds-button-outline,
        color: $great-ds-semantic-text-focus-button-label-focus,
        background-color: $great-ds-semantic-interaction-focus,
        box-shadow: 0 $great-ds-button-shadow-size 0 $great-ds-semantic-border-focus-button-border,
        border: $great-ds-button-border-width solid $great-ds-semantic-border-focus-button-border,
        border-bottom: none
    );

    $hover-styles: (
        color: $text-color,
        background-color: $bg-hover,
        box-shadow: 0 $great-ds-button-shadow-size 0 $border-hover,
        outline: $great-ds-button-outline,
        text-decoration: none
    );

    &:focus,
    &:focus:hover {
        @each $property, $value in $focus-styles {
            #{$property}: $value;
        }

        @if $is-inverted {
            box-shadow: 0 1px 0 $great-ds-semantic-border-focus-button-border;
        }
    }

    &:hover:not(:focus),
    &:active,
    &:focus:active {
        @each $property, $value in $hover-styles {
            #{$property}: $value;
        }
        text-decoration: none !important;

        @if $has-border {
            color: $border-hover;
            border: $great-ds-button-border-width solid $border-hover;
            border-bottom: none;
        }

        @if $is-inverted {
            border: $great-ds-button-border-width solid $border;
            box-shadow: 0 2px 0 $border;
            color: $bg-color;
            border-bottom: none;
        }
    }

    &:active,
    &:active:hover {
        @if not $has-border {
            top: 2px;
            border-color: transparent;
            box-shadow: 0 1px 0 $border-hover;
        } @else {
            box-shadow: 0 2px 0 $border-hover;
        }
    }
}

// Mixin for search button styles
@mixin great-ds-button-search-states($bg-color, $bg-hover-color, $text-color, $outline-color, $border-color) {
    margin: 0 0 0 -2px;
    height: 56px;
    width: 60px;
    box-shadow: none;

    &:focus {
        background-color: $bg-hover-color !important;
        color: $text-color !important;
        outline: 3px solid $outline-color;
        outline-offset: 0;
        border: 4px solid $border-color !important;
        padding: 10px 10px 7px 11px;
    }
}

// Placeholder for primary button styles
%great-ds-button-primary {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-primary-button,
        $great-ds-semantic-interaction-hover-primary-button,
        $great-ds-semantic-text-default-primary-button-label,
        $great-ds-semantic-border-default-primary-button-border,
        $great-ds-semantic-border-hover-primary-button-border
    );
}

// New placeholder for primary button styles on dark background
%great-ds-button-primary-on-dark {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-primary-button,
        $great-ds-semantic-surface-background-white,
        $great-ds-semantic-text-default-primary-button-label,
        $great-ds-semantic-border-default-primary-button-border,
        $great-ds-semantic-border-hover-primary-button-border
    );

    $active-hover-styles: (
        border-color: transparent,
        color: $great-ds-semantic-interaction-default-primary-button,
    );

    &:hover:not(:focus) {
        @each $property, $value in $active-hover-styles {
            #{$property}: $value;
        }
        background-color: $great-ds-semantic-surface-background-white;
        box-shadow: 0 $great-ds-button-shadow-size 0 $great-ds-semantic-interaction-default-primary-button;
    }

    &:active,
    &:active:hover,
    &:focus:active {
        @each $property, $value in $active-hover-styles {
            #{$property}: $value;
        }
        background-color: $great-ds-semantic-surface-background-white !important;
        box-shadow: 0 1px 0 $great-ds-semantic-interaction-default-primary-button;
    }
}

// Placeholder for secondary button styles
%great-ds-button-secondary {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-secondary-button,
        $great-ds-semantic-interaction-hover-secondary-button,
        $great-ds-semantic-text-default-secondary-button-label,
        $great-ds-semantic-border-default-secondary-button-border,
        $great-ds-semantic-border-hover-secondary-button-border,
        true
    );
}

// Placeholder for warning button styles
%great-ds-button-warning {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-error,
        $great-ds-semantic-interaction-hover-error,
        $great-ds-semantic-text-default-error-button-label,
        $great-ds-semantic-border-default-error-button-border,
        $great-ds-semantic-border-hover-error-border
    );
}

// Placeholder for transactional button styles
%great-ds-button-transactional {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-success,
        $great-ds-semantic-interaction-hover-success,
        $great-ds-semantic-text-default-success-button-label,
        $great-ds-semantic-border-default-success-button-border,
        $great-ds-semantic-border-hover-success-border
    );
}

// Placeholder for CTA button styles
%great-ds-button-cta {
    @include great-ds-button-states(
        $great-ds-semantic-interaction-default-cta-button,
        $great-ds-semantic-interaction-hover-cta-button,
        $great-ds-semantic-text-default-cta-button-label,
        $great-ds-semantic-border-default-cta-button-border,
        $great-ds-semantic-border-hover-cta-button-border,
        true
    );

    display: inline-flex;
    min-height: auto;
    justify-content: center;

    .great-ds-icon-svg {
        margin-left: 10px;
        vertical-align: middle;
        flex-shrink: 0;
        align-self: center;
    }
}

// Placeholder for icon button styles
%great-ds-button-icon {
    display: inline-flex;
    min-height: auto;
    justify-content: center;
    align-items: center;
    padding: $great-ds-button-icon-padding;

    .great-ds-icon-svg {
        vertical-align: middle;
        flex-shrink: 0;
        align-self: center;
    }

    .great-ds-button__text {
        display: none;
    }

    &:focus {
        z-index: 2;
    }
}

// Placeholder for icon button prefix styles
%great-ds-button-icon-prefix {
    .great-ds-icon-svg {
       margin-right: 10px;
    }
}

// Placeholder for icon button suffix styles
%great-ds-button-icon-suffix {
    .great-ds-icon-svg {
       margin-left: 10px;
    }
}

// Mixin for inverted button styles
@mixin great-ds-button-inverted($background, $hover-background, $hover-text-color) {
    @include great-ds-button-states(
        $background,
        $great-ds-semantic-surface-background-white,
        $great-ds-semantic-surface-background-white,
        $hover-background,
        $hover-text-color,
        true,
        true
    );
    margin-bottom: 0;
    font-family: $great-ds-type-family-great;

    &:focus:not(:active),
    &:focus:hover:not(:active) {
        color: $great-ds-semantic-text-focus-button-label-focus;
        border: $great-ds-button-border-width solid $great-ds-semantic-interaction-focus;
        box-shadow: 0 2px 0 $great-ds-semantic-interaction-focus;
        border-bottom: none;
        background-color: $great-ds-semantic-interaction-focus;
    }
}

// Placeholder for icon inline styles
%great-ds-button-inline {
    padding: $great-ds-button-inline-padding;
}

// Placeholder for search button styles
%great-ds-button-search {
    @include great-ds-button-search-states(
        $great-ds-semantic-interaction-default-primary-button,
        $great-ds-semantic-interaction-hover-primary-button,
        $great-ds-semantic-text-default-primary-button-label,
        $great-ds-semantic-interaction-focus,
        $great-ds-semantic-border-focus-button-border
    );

    &:active {
        top: 0px;
    }
}

// Placeholder for menu button styles
%great-ds-button-menu {
    .great-ds-icon--menu {
        width: 16px;
        height: 17px;

        .great-ds-icon--menu-close {
            opacity: 0;
        }
    }

    &[aria-expanded="true"] {
        .great-ds-icon--menu {
            .great-ds-icon--menu-bars {
                opacity: 0;
            }
            .great-ds-icon--menu-close {
                opacity: 1;
            }
        }
    }
}

// Placeholder for full width button styles
%great-ds-button-full-width {
    width: 100%;
}

// Placeholder for auto width button styles
%great-ds-button-auto-width {
    width: auto;
}

// Base button styles
.great-ds-button {
    @extend %great-ds-button-base;
    @extend %great-ds-button-primary;
}

// Secondary button styles
.great-ds-button--secondary {
    @extend %great-ds-button-base;
    @extend %great-ds-button-secondary;
}

// Warning button styles
.great-ds-button--warning {
    @extend %great-ds-button-base;
    @extend %great-ds-button-warning;
}

// Transactional button styles
.great-ds-button--transactional {
    @extend %great-ds-button-base;
    @extend %great-ds-button-transactional;
}

// CTA button styles
.great-ds-button--cta {
    @extend %great-ds-button-base;
    @extend %great-ds-button-cta;
}

// Inline button styles
.great-ds-button--inline {
    @extend %great-ds-button-base;
    @extend %great-ds-button-inline;
}

// Toggle button styles
.great-ds-button--toggle {
    @extend %great-ds-button-base;
    @extend %great-ds-button-secondary;
    @extend %great-ds-button-inline;
}

// Base inverted button styles (domestic)
.great-ds-button--inverted {
    @include great-ds-button-inverted(
        $great-ds-semantic-surface-background-great-ds-blue,
        $great-ds-semantic-surface-background-white,
        $great-ds-semantic-surface-background-great-ds-blue
    );
}

// International variant for inverted buttons
.great-ds-button--inverted.great-ds-button--international {
    @include great-ds-button-inverted(
        $great-ds-semantic-surface-background-great-ds-red,
        $great-ds-semantic-surface-background-white,
        $great-ds-semantic-surface-background-great-ds-red
    );
}

// Icon button styles
.great-ds-button--icon {
    @extend %great-ds-button-base;
    @extend %great-ds-button-icon;
}

// Icon prefix button styles
.great-ds-button--icon-prefix {
    @extend %great-ds-button-base;
    @extend %great-ds-button-icon-prefix;
}

// Icon suffix button styles
.great-ds-button--icon-suffix {
    @extend %great-ds-button-base;
    @extend %great-ds-button-icon-suffix;
}

// Full width button styles
.great-ds-button--full-width {
    @extend %great-ds-button-base;
    @extend %great-ds-button-full-width;
}

// Auto width button styles
.great-ds-button--auto-width {
    @extend %great-ds-button-base;
    @extend %great-ds-button-auto-width;
}

// Search button styles
.great-ds-button--search {
    @extend %great-ds-button-base;
    @extend %great-ds-button-search;
}

// Menu button styles
.great-ds-button--menu {
    @extend %great-ds-button-base;
    @extend %great-ds-button-menu;
}

// Add this new class at the end of the file
.great-ds-button--primary-on-dark {
    @extend %great-ds-button-base;
    @extend %great-ds-button-primary-on-dark;
}

